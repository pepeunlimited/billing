// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/pepeunlimited/billing/internal/pkg/ent/item"

	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// PaymentInstrumentsColumns holds the columns for the "payment_instruments" table.
	PaymentInstrumentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString, Unique: true, Size: 12},
		{Name: "type_i18n_id", Type: field.TypeInt64, Nullable: true},
	}
	// PaymentInstrumentsTable holds the schema information for the "payment_instruments" table.
	PaymentInstrumentsTable = &schema.Table{
		Name:        "payment_instruments",
		Columns:     PaymentInstrumentsColumns,
		PrimaryKey:  []*schema.Column{PaymentInstrumentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "price_id", Type: field.TypeInt64, Nullable: true},
		{Name: "plan_id", Type: field.TypeInt64, Nullable: true},
		{Name: "quantity", Type: field.TypeUint8, Default: item.DefaultQuantity},
		{Name: "orders_items", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "order_items_orders_items",
				Columns: []*schema.Column{OrderItemsColumns[4]},

				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:        "orders",
		Columns:     OrdersColumns,
		PrimaryKey:  []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "instrument_payments", Type: field.TypeInt, Nullable: true},
		{Name: "orders_payments", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "payments_payment_instruments_payments",
				Columns: []*schema.Column{PaymentsColumns[1]},

				RefColumns: []*schema.Column{PaymentInstrumentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_orders_payments",
				Columns: []*schema.Column{PaymentsColumns[2]},

				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderTxsColumns holds the columns for the "order_txs" table.
	OrderTxsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString, Size: 8},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "orders_txs", Type: field.TypeInt, Nullable: true},
	}
	// OrderTxsTable holds the schema information for the "order_txs" table.
	OrderTxsTable = &schema.Table{
		Name:       "order_txs",
		Columns:    OrderTxsColumns,
		PrimaryKey: []*schema.Column{OrderTxsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "order_txs_orders_txs",
				Columns: []*schema.Column{OrderTxsColumns[3]},

				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PaymentInstrumentsTable,
		OrderItemsTable,
		OrdersTable,
		PaymentsTable,
		OrderTxsTable,
	}
)

func init() {
	OrderItemsTable.ForeignKeys[0].RefTable = OrdersTable
	PaymentsTable.ForeignKeys[0].RefTable = PaymentInstrumentsTable
	PaymentsTable.ForeignKeys[1].RefTable = OrdersTable
	OrderTxsTable.ForeignKeys[0].RefTable = OrdersTable
}
