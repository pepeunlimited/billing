// Code generated by entc, DO NOT EDIT.

package subscription

import (
	"github.com/pepeunlimited/billing/internal/pkg/ent/schema"
)

const (
	// Label holds the string label denoting the subscription type in the database.
	Label = "subscription"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id vertex property in the database.
	FieldUserID = "user_id"
	// FieldStartAt holds the string denoting the start_at vertex property in the database.
	FieldStartAt = "start_at"
	// FieldEndAt holds the string denoting the end_at vertex property in the database.
	FieldEndAt = "end_at"
	// FieldStatus holds the string denoting the status vertex property in the database.
	FieldStatus = "status"

	// Table holds the table name of the subscription in the database.
	Table = "subscriptions"
	// PlansTable is the table the holds the plans relation/edge.
	PlansTable = "subscriptions"
	// PlansInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	PlansInverseTable = "plans"
	// PlansColumn is the table column denoting the plans relation/edge.
	PlansColumn = "plan_subscriptions"
)

// Columns holds all SQL columns for subscription fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldStartAt,
	FieldEndAt,
	FieldStatus,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Subscription type.
var ForeignKeys = []string{
	"plan_subscriptions",
}

var (
	fields = schema.Subscription{}.Fields()

	// descStatus is the schema descriptor for status field.
	descStatus = fields[3].Descriptor()
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator = descStatus.Validators[0].(func(string) error)
)
